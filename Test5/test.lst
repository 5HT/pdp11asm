0001 0000                      		.i8080
0003 0000                      		entry:
0004 0000 C3 4A 00             		    jmp main
0006 0003                      		__padd16:
0007 0003 4E                   		    mov c, m
0008 0004 23                   		    inx h
0009 0005 46                   		    mov b, m
0010 0006 EB                   		    xchg
0011 0007 0B                   		    dcx b
0012 0008 EB                   		    xchg
0013 0009 73                   		    mov m, e
0014 000A 2B                   		    dcx h
0015 000B 72                   		    mov m, d
0016 000C 69                   		    mov l, c
0017 000D 60                   		    mov h, b
0018 000E C9                   		    ret
0020 000F                      		__sadd16:
0021 000F 4E                   		    mov c, m
0022 0010 23                   		    inx h
0023 0011 46                   		    mov b, m
0024 0012 EB                   		    xchg
0025 0013 0B                   		    dcx b
0026 0014 EB                   		    xchg
0027 0015 73                   		    mov m, e
0028 0016 2B                   		    dcx h
0029 0017 72                   		    mov m, d
0030 0018 C9                   		    ret
0032 0019                      		__sgnb0:
0033 0019 6F                   		    mov l, a
0034 001A 26 00                		    mvi h, 0
0035 001C C9                   		    ret
0037 001D                      		__or16:
0038 001D 7C                   		    mov a, h
0039 001E B2                   		    ora d
0040 001F 67                   		    mov h, a
0041 0020 7D                   		    mov a, l
0042 0021 B3                   		    ora e
0043 0022 6F                   		    mov l, a
0044 0023 C9                   		    ret
0046 0024                      		.include "include/__mul16.inc"
0001 0024                      		__MUL16:
0002 0024 C5                   		  push b
0003 0025 44                   		  mov b, h
0004 0026 4D                   		  mov c, l
0005 0027 21 00 00             		  lxi h, 0
0006 002A 3E 11                		  mvi a, 17
0007 002C                      		__MUL16_1:
0008 002C 3D                   		  dcr a
0009 002D CA 48 00             		  jz __MUL16_4
0010 0030 29                   		  dad h
0011 0031 EB                   		  xchg
0012 0032 D2 3A 00             		  jnc __MUL16_2
0013 0035 29                   		  dad h
0014 0036 23                   		  inx h
0015 0037 C3 3B 00             		  jmp __MUL16_3
0016 003A                      		__MUL16_2:
0017 003A 29                   		  dad h
0018 003B                      		__MUL16_3:
0019 003B EB                   		  xchg
0020 003C D2 2C 00             		  jnc __MUL16_1
0021 003F 09                   		  dad b
0022 0040 D2 2C 00             		  jnc __MUL16_1
0023 0043 13                   		  inx d
0024 0044 C3 2C 00             		  jmp __MUL16_1
0025 0047 C9                   		  ret
0026 0048                      		__MUL16_4:
0027 0048 C1                   		  pop b
0028 0049 C9                   		  ret
0127 004A                      		main:
0127 004A                      		//61     addr = (uint8_t*)(0x76D0 + 78*3 + 8);
0127 004A 21 C2 77             		    lxi h, 077C2h
0127 004D                      		//62     for(i=64; i; i--)
0127 004D 3E 40                		    mvi a, 040h
0127 004F 32 6D 01             		    sta 016Dh
0127 0052 22 74 01             		    shld 0174h
0127 0055 3A 6D 01             		    lda 016Dh
0127 0058 B7                   		    ora a
0127 0059 CA 6F 00             		    jz 06Fh
0127 005C                      		//63     {
0127 005C 2A 74 01             		    lhld 0174h
0127 005F 36 2A                		    mvi m, 02Ah
0127 0061                      		//65 	addr++;
0127 0061 23                   		    inx h
0127 0062 22 74 01             		    shld 0174h
0127 0065 3A 6D 01             		    lda 016Dh
0127 0068 3D                   		    dcr a
0127 0069 32 6D 01             		    sta 016Dh
0127 006C C3 55 00             		    jmp 055h
0127 006F                      		//68     addr = (uint8_t*)(0x76D0 + 78*(3+24) + 8);
0127 006F 21 12 7F             		    lxi h, 07F12h
0127 0072                      		//69     for(i=64; i; i--)
0127 0072 3E 40                		    mvi a, 040h
0127 0074 32 6D 01             		    sta 016Dh
0127 0077 22 74 01             		    shld 0174h
0127 007A 3A 6D 01             		    lda 016Dh
0127 007D B7                   		    ora a
0127 007E CA 94 00             		    jz 094h
0127 0081                      		//70     {
0127 0081 2A 74 01             		    lhld 0174h
0127 0084 36 2A                		    mvi m, 02Ah
0127 0086                      		//72 	addr++;
0127 0086 23                   		    inx h
0127 0087 22 74 01             		    shld 0174h
0127 008A 3A 6D 01             		    lda 016Dh
0127 008D 3D                   		    dcr a
0127 008E 32 6D 01             		    sta 016Dh
0127 0091 C3 7A 00             		    jmp 07Ah
0127 0094                      		//75     addr = (uint8_t*)(0x76D0 + 78*3 + 8);
0127 0094 21 C2 77             		    lxi h, 077C2h
0127 0097                      		//76     for(i=25; i; i--)
0127 0097 3E 19                		    mvi a, 019h
0127 0099 32 6D 01             		    sta 016Dh
0127 009C 22 74 01             		    shld 0174h
0127 009F 3A 6D 01             		    lda 016Dh
0127 00A2 B7                   		    ora a
0127 00A3 CA C8 00             		    jz 0C8h
0127 00A6                      		//77     {
0127 00A6 2A 74 01             		    lhld 0174h
0127 00A9 36 2A                		    mvi m, 02Ah
0127 00AB                      		//79 	addr+=63;
0127 00AB 11 3F 00             		    lxi d, 03Fh
0127 00AE 19                   		    dad d
0127 00AF                      		//80 	*addr = '*';
0127 00AF 22 74 01             		    shld 0174h
0127 00B2 2A 74 01             		    lhld 0174h
0127 00B5 36 2A                		    mvi m, 02Ah
0127 00B7                      		//81 	addr+=78-63;
0127 00B7 11 0F 00             		    lxi d, 0Fh
0127 00BA 19                   		    dad d
0127 00BB 22 74 01             		    shld 0174h
0127 00BE 3A 6D 01             		    lda 016Dh
0127 00C1 3D                   		    dcr a
0127 00C2 32 6D 01             		    sta 016Dh
0127 00C5 C3 9F 00             		    jmp 09Fh
0127 00C8                      		//84     x=0, y=0;
0127 00C8 3E 00                		    mvi a, 00h
0127 00CA 32 77 01             		    sta 0177h
0127 00CD 3E 00                		    mvi a, 00h
0127 00CF                      		//85     for(;;)
0127 00CF 32 78 01             		    sta 0178h
0127 00D2                      		//86     {
0127 00D2 CD 1B F8             		    call 0F81Bh
0127 00D5                      		//89 	switch(a)
0127 00D5 32 76 01             		    sta 0176h
0127 00D8 3A 76 01             		    lda 0176h
0127 00DB 6F                   		    mov l, a
0127 00DC 26 00                		    mvi h, 00h
0127 00DE EB                   		    xchg
0127 00DF 21 F8 FF             		    lxi h, 0FFF8h
0127 00E2 19                   		    dad d
0127 00E3 7D                   		    mov a, l
0127 00E4 B4                   		    ora h
0127 00E5 CA 23 01             		    jz 0123h
0127 00E8 21 E8 FF             		    lxi h, 0FFE8h
0127 00EB 19                   		    dad d
0127 00EC 7D                   		    mov a, l
0127 00ED B4                   		    ora h
0127 00EE CA 31 01             		    jz 0131h
0127 00F1 21 E7 FF             		    lxi h, 0FFE7h
0127 00F4 19                   		    dad d
0127 00F5 7D                   		    mov a, l
0127 00F6 B4                   		    ora h
0127 00F7 CA 06 01             		    jz 0106h
0127 00FA 21 E6 FF             		    lxi h, 0FFE6h
0127 00FD 19                   		    dad d
0127 00FE 7D                   		    mov a, l
0127 00FF B4                   		    ora h
0127 0100 CA 14 01             		    jz 0114h
0127 0103 C3 40 01             		    jmp 0140h
0127 0106                      		//91 	    case 0x19: // up
0127 0106                      		//92 		if(y==0) continue;
0127 0106 3A 78 01             		    lda 0178h
0127 0109 B7                   		    ora a
0127 010A CA D2 00             		    jz 0D2h
0127 010D                      		//93 		y--;
0127 010D 3D                   		    dcr a
0127 010E                      		//94 		break;
0127 010E 32 78 01             		    sta 0178h
0127 0111 C3 43 01             		    jmp 0143h
0127 0114                      		//95 	    case 0x1A: // down
0127 0114                      		//96 		if(y==24) continue;
0127 0114 3A 78 01             		    lda 0178h
0127 0117 FE 18                		    cpi 018h
0127 0119 CA D2 00             		    jz 0D2h
0127 011C                      		//97 		y++;
0127 011C 3C                   		    inr a
0127 011D                      		//98 		break;
0127 011D 32 78 01             		    sta 0178h
0127 0120 C3 43 01             		    jmp 0143h
0127 0123                      		//99 	    case 0x08: // left
0127 0123                      		//100 		if(x==0) continue;
0127 0123 3A 77 01             		    lda 0177h
0127 0126 B7                   		    ora a
0127 0127 CA D2 00             		    jz 0D2h
0127 012A                      		//101 		x--;
0127 012A 3D                   		    dcr a
0127 012B                      		//102 		break;
0127 012B 32 77 01             		    sta 0177h
0127 012E C3 43 01             		    jmp 0143h
0127 0131                      		//103 	    case 0x18: // right
0127 0131                      		//104 		if(x==64) continue;
0127 0131 3A 77 01             		    lda 0177h
0127 0134 FE 40                		    cpi 040h
0127 0136 CA D2 00             		    jz 0D2h
0127 0139                      		//105 		x++;
0127 0139 3C                   		    inr a
0127 013A                      		//106 		break;
0127 013A 32 77 01             		    sta 0177h
0127 013D C3 43 01             		    jmp 0143h
0127 0140                      		//107 	    default:
0127 0140                      		//108 		continue;
0127 0140 C3 D2 00             		    jmp 0D2h
0127 0143                      		//110 	*(uint8_t*)((0x76D0 + 78*3 + 8) + y*78 + x) = 'X';
0127 0143 3A 78 01             		    lda 0178h
0127 0146 6F                   		    mov l, a
0127 0147 26 00                		    mvi h, 00h
0127 0149 11 4E 00             		    lxi d, 04Eh
0127 014C CD 24 00             		    call 024h
0127 014F 11 C2 77             		    lxi d, 077C2h
0127 0152 19                   		    dad d
0127 0153 E5                   		    push h
0127 0154 3A 77 01             		    lda 0177h
0127 0157 5F                   		    mov e, a
0127 0158 E1                   		    pop h
0127 0159 16 00                		    mvi d, 00h
0127 015B 19                   		    dad d
0127 015C 36 58                		    mvi m, 058h
0127 015E                      		//111 	while(bioskey() != 0xFF);
0127 015E CD 1B F8             		    call 0F81Bh
0127 0161 FE FF                		    cpi 0FFh
0127 0163 C2 5E 01             		    jnz 015Eh
0127 0166 C3 D2 00             		    jmp 0D2h
0127 0169                      		//114     for(;;);    
0127 0169 C3 69 01             		    jmp 0169h
0127 016C C9                   		    ret
0128 0179 