0001 0000                      		    org 1000h
0002 1000                      		entry:
0003 1000 012706 010000        		    MOV #1000h, SP
0004 1004 000410               		    BR MAIN
0057 1006                      		test:
0057 1006 162706 000002        		    sub #2, SP
0057 100A                      		//9     int a = b;
0057 100A 016666 000000 000002 		    mov 0(SP), 2(SP)
0057 1010 062706 000002        		    add #2, SP
0057 1014 000207               		    ret
0057 1016                      		main:
0057 1016 162706 000006        		    sub #6, SP
0057 101A                      		//14     int16_t o = 1;
0057 101A 012766 000001 000002 		    mov #1, 2(SP)
0057 1020                      		//15     o = o-o;
0057 1020 016600 000002        		    mov 2(SP), R0
0057 1024 166600 000002        		    sub 2(SP), R0
0057 1028 010066 000002        		    mov R0, 2(SP)
0057 102C                      		//17     test(1);
0057 102C 012746 000001        		    mov #1, -(SP)
0057 1030 004727 010006        		    jsr PC, #4102
0057 1034 062706 000002        		    add #2, SP
0057 1038                      		//18     for(;;)
0057 1038                      		//19     {
0057 1038 012766 040000 000004 		    mov #16384, 4(SP)
0057 103E                      		//21 	do
0057 103E                      		//22         {
0057 103E 005066 000006        		    clr 6(SP)
0057 1042                      		//24 	    do {
0057 1042                      		//24 	    do {
0057 1042 017600 000004        		    mov @4(SP), R0
0057 1046 012704 125252        		    mov #43690, R4
0057 104A 074400               		    xor R4, R0
0057 104C 010076 000004        		    mov R0, @4(SP)
0057 1050                      		//26         	a++;
0057 1050 062766 000002 000004 		    add #2, 4(SP)
0057 1056                      		//27 		x++;
0057 1056 005266 000006        		    inc 6(SP)
0057 105A                      		//28 	    } while(x < 32);
0057 105A 022766 000040 000006 		    cmp #32, 6(SP)
0057 1060 101360               		    bhi 01042h
0057 1062                      		//29 	    do {
0057 1062                      		//29 	    do {
0057 1062 017600 000004        		    mov @4(SP), R0
0057 1066 012704 052525        		    mov #21845, R4
0057 106A 074400               		    xor R4, R0
0057 106C 010076 000004        		    mov R0, @4(SP)
0057 1070                      		//31         	a++;
0057 1070 062766 000002 000004 		    add #2, 4(SP)
0057 1076                      		//32 		x++;
0057 1076 005266 000006        		    inc 6(SP)
0057 107A                      		//33 	    } while(x < 64);
0057 107A 022766 000100 000006 		    cmp #64, 6(SP)
0057 1080 101360               		    bhi 01062h
0057 1082                      		//35 	while(a < (uint16_t*)0x8000);
0057 1082 022766 100000 000004 		    cmp #32768, 4(SP)
0057 1088 101332               		    bhi 0103Eh
0057 108A                      		//37         a = (uint16_t*)0x8000;
0057 108A 012766 100000 000004 		    mov #32768, 4(SP)
0057 1090                      		//38 	do
0057 1090                      		//39         {
0057 1090 005066 000006        		    clr 6(SP)
0057 1094                      		//41 	    do {
0057 1094                      		//41 	    do {
0057 1094 162766 000002 000004 		    sub #2, 4(SP)
0057 109A                      		//43         	*a ^= 0xAAAA;
0057 109A 017600 000004        		    mov @4(SP), R0
0057 109E 012704 125252        		    mov #43690, R4
0057 10A2 074400               		    xor R4, R0
0057 10A4 010076 000004        		    mov R0, @4(SP)
0057 10A8                      		//44 		x++;
0057 10A8 005266 000006        		    inc 6(SP)
0057 10AC                      		//45 	    } while(x < 32);
0057 10AC 022766 000040 000006 		    cmp #32, 6(SP)
0057 10B2 101360               		    bhi 01094h
0057 10B4                      		//46 	    do {
0057 10B4                      		//46 	    do {
0057 10B4 162766 000002 000004 		    sub #2, 4(SP)
0057 10BA                      		//48         	*a ^= 0x5555;
0057 10BA 017600 000004        		    mov @4(SP), R0
0057 10BE 012704 052525        		    mov #21845, R4
0057 10C2 074400               		    xor R4, R0
0057 10C4 010076 000004        		    mov R0, @4(SP)
0057 10C8                      		//49 		x++;
0057 10C8 005266 000006        		    inc 6(SP)
0057 10CC                      		//50 	    } while(x < 64);
0057 10CC 022766 000100 000006 		    cmp #64, 6(SP)
0057 10D2 101360               		    bhi 010B4h
0057 10D4                      		//52 	while(a > (uint16_t*)0x4000);
0057 10D4 022766 040000 000004 		    cmp #16384, 4(SP)
0057 10DA 103732               		    blo 01090h
0057 10DC 000655               		    br 01038h
0057 10DE 062706 000006        		    add #6, SP
0057 10E2 000207               		    ret
0058 10E4 